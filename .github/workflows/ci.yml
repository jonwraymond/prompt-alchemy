name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21, 1.22, 1.23]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install dependencies
      run: go mod download

    - name: Run unit tests
      run: go test -v ./... -short

    - name: Run race condition tests
      run: go test -race -v ./... -short

  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23

    - name: Run benchmarks
      run: go test -bench=. -benchmem -run=^$ ./...

  build:
    name: Build Binary
    runs-on: ubuntu-latest
    needs: test
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23

    - name: Build binary
      run: make build

    - name: Test binary
      run: ./prompt-alchemy --help

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23

    - name: Run gofmt check
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Files need formatting:"
          gofmt -s -l .
          exit 1
        fi

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [test, build]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23

    - name: Install dependencies
      run: go mod download

    - name: Build binary
      run: make build

    - name: Run integration tests
      run: |
        chmod +x scripts/integration-test.sh
        scripts/integration-test.sh

    - name: Run comprehensive E2E tests (smoke level)
      run: |
        chmod +x scripts/run-e2e-tests.sh
        scripts/run-e2e-tests.sh --test-level smoke --mock-mode true

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: integration-test-results
        path: /tmp/prompt-alchemy-*
        retention-days: 7