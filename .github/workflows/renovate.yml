name: Renovate

on:
  # Validate config on every push
  push:
    paths:
      - 'renovate.json'
      - '.github/workflows/renovate.yml'
  pull_request:
    paths:
      - 'renovate.json'
      - '.github/workflows/renovate.yml'
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'info'
        type: choice
        options:
          - debug
          - info
          - warn
          - error
      dryRun:
        description: 'Dry run (no changes made)'
        required: false
        default: false
        type: boolean

env:
  # Use GitHub's built-in token for authentication
  RENOVATE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Set log level
  LOG_LEVEL: ${{ github.event.inputs.logLevel || 'info' }}

jobs:
  validate-config:
    name: Validate Renovate Config
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Renovate
      run: npm install -g renovate

    - name: Validate Renovate config
      run: |
        echo "Validating Renovate configuration..."
        npx renovate --dry-run --print-config > /dev/null
        echo "‚úÖ Renovate configuration is valid"

  # Optional: Run Renovate manually (requires RENOVATE_TOKEN secret)
  renovate-manual:
    name: Run Renovate (Manual)
    runs-on: ubuntu-latest
    needs: validate-config
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Renovate
      run: npm install -g renovate

    - name: Run Renovate
      env:
        RENOVATE_DRY_RUN: ${{ github.event.inputs.dryRun }}
        RENOVATE_LOG_LEVEL: ${{ env.LOG_LEVEL }}
        RENOVATE_REPOSITORIES: ${{ github.repository }}
        RENOVATE_USERNAME: renovate[bot]
        RENOVATE_GIT_AUTHOR: 'Renovate Bot <bot@renovateapp.com>'
      run: |
        if [ "$RENOVATE_DRY_RUN" = "true" ]; then
          echo "üîç Running Renovate in dry-run mode..."
          renovate --dry-run
        else
          echo "üöÄ Running Renovate..."
          renovate
        fi

  # Check for Renovate app installation
  check-app-installation:
    name: Check Renovate App
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch'
    
    steps:
    - name: Check Renovate App Installation
      run: |
        echo "üìã Renovate Configuration Setup Complete!"
        echo ""
        echo "Next steps to enable automated dependency updates:"
        echo "1. Install the Renovate GitHub App: https://github.com/apps/renovate"
        echo "2. Grant access to this repository"
        echo "3. Renovate will automatically:"
        echo "   - Create an onboarding PR"
        echo "   - Start monitoring dependencies"
        echo "   - Open PRs for updates based on your configuration"
        echo ""
        echo "üîß Configuration highlights:"
        echo "- Auto-merge: Enabled for patches (after 1 day stability)"
        echo "- Security updates: Immediate processing"
        echo "- AI/ML SDKs: Careful review required (7 days stability)"
        echo "- Grouped updates: Related dependencies updated together"
        echo "- Dependency dashboard: Available in Issues tab"
        echo ""
        echo "üìä Monitoring:"
        echo "- Check the dependency dashboard issue for status"
        echo "- Review PRs with appropriate labels"
        echo "- Security alerts get highest priority" 