version: '3.8'

services:
  # Quickstart MCP Server - minimal configuration
  prompt-alchemy-mcp:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    image: prompt-alchemy-mcp:latest
    container_name: prompt-alchemy-mcp-quickstart
    volumes:
      - ~/.prompt-alchemy:/app/data
    environment:
      # API Keys - set these in your .env file
      - PROMPT_ALCHEMY_PROVIDERS_OPENAI_API_KEY=${OPENAI_API_KEY}
      - PROMPT_ALCHEMY_PROVIDERS_ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - PROMPT_ALCHEMY_PROVIDERS_GOOGLE_API_KEY=${GOOGLE_API_KEY}
      
      # Default configuration
      - PROMPT_ALCHEMY_EMBEDDINGS_PROVIDER=openai
      - PROMPT_ALCHEMY_EMBEDDINGS_MODEL=text-embedding-3-small
      - PROMPT_ALCHEMY_SELF_LEARNING_ENABLED=true
      - LOG_LEVEL=info
    stdin_open: true
    tty: true
    restart: unless-stopped

  # Optional: Simple HTTP API for testing
  prompt-alchemy-api:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    image: prompt-alchemy-mcp:latest
    container_name: prompt-alchemy-api-quickstart
    ports:
      - "8080:8080"
    volumes:
      - ~/.prompt-alchemy:/app/data
    environment:
      - PROMPT_ALCHEMY_PROVIDERS_OPENAI_API_KEY=${OPENAI_API_KEY}
      - PROMPT_ALCHEMY_PROVIDERS_ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - PROMPT_ALCHEMY_PROVIDERS_GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - LOG_LEVEL=info
    command: ["prompt-alchemy", "serve", "http", "--port", "8080"]
    profiles:
      - with-api

# Usage:
# 1. Create .env file with your API keys
# 2. Run MCP only: docker-compose -f docker-compose.quickstart.yml up
# 3. Run with API: docker-compose -f docker-compose.quickstart.yml --profile with-api up