# Quickstart Dockerfile for Prompt Alchemy
# This creates a completely self-contained image with embedded database

# Stage 1: Build the Go binary
FROM golang:1.24 AS builder

# Set working directory
WORKDIR /app

# Copy go.mod and go.sum for dependency caching
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy the rest of the source code
COPY . .

# Build the binary with CGO enabled for SQLite support
RUN CGO_ENABLED=1 GOOS=linux go build -o prompt-alchemy ./cmd/prompt-alchemy

# Stage 2: Create the final image
FROM debian:12-slim

# Install ca-certificates and curl for HTTPS requests and health checks
RUN apt-get update && apt-get install -y ca-certificates curl && rm -rf /var/lib/apt/lists/*

# Copy the binary from the builder stage
COPY --from=builder /app/prompt-alchemy /usr/local/bin/prompt-alchemy

# Copy schema file to expected location
COPY --from=builder /app/internal/storage/schema.sql /app/internal/storage/schema.sql

# Create necessary directories with proper permissions
RUN mkdir -p /app/data /app/internal/storage /app/.prompt-alchemy && \
    chmod -R 755 /app

# Create a default configuration that uses internal paths
RUN cat > /app/config.yaml << 'EOF'
# Default configuration for containerized Prompt Alchemy
data_dir: /app/data
database:
  path: /app/data/prompts.db

generation:
  default_temperature: 0.8
  default_max_tokens: 2048
  default_count: 3
  default_embedding_model: text-embedding-3-small

phases:
  prima-materia:
    provider: ""  # Will use first available provider
  solutio:
    provider: ""
  coagulatio:
    provider: ""

providers:
  # Providers will be configured via environment variables
  openai:
    enabled: true
  anthropic:
    enabled: true
  google:
    enabled: true
  grok:
    enabled: true
  openrouter:
    enabled: true
  ollama:
    enabled: false  # Disabled by default as it requires local setup
EOF

# Set working directory
WORKDIR /app

# Create an initialization script
RUN cat > /app/init.sh << 'EOF'
#!/bin/sh
set -e

# Initialize database if it doesn't exist
if [ ! -f "/app/data/prompts.db" ]; then
    echo "Initializing database..."
    prompt-alchemy db migrate
fi

# Execute the command passed to docker run
exec "$@"
EOF

RUN chmod +x /app/init.sh

# Use the init script as entrypoint
ENTRYPOINT ["/app/init.sh"]

# Default command
CMD ["prompt-alchemy", "serve", "api", "--config", "/app/config.yaml", "--host", "0.0.0.0", "--port", "8080"]

# Expose HTTP port for REST API
EXPOSE 8080

# Add labels for better container management
LABEL org.opencontainers.image.title="Prompt Alchemy"
LABEL org.opencontainers.image.description="AI prompt generation and optimization toolkit"
LABEL org.opencontainers.image.source="https://github.com/jonwraymond/prompt-alchemy"